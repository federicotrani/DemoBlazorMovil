@layout LoginLayout
@page "/login"
@page "/"

@using DemoBlazorMovil.Services
@using DemoBlazorMovil.Services.Contrato
@using DemoBlazorMovil.Shared.DTO
@using Microsoft.AspNetCore.Components.Forms
@using DemoBlazorMovil.Models
@using System.ComponentModel.DataAnnotations

@inject NavigationManager navigation
@inject AlertaService alertaService
@inject IUsuarioService usuarioService

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Iniciar sesión</h3>

                    @if (isLoading)
                    {
                        <div class="text-center mb-3">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Cargando...</span>
                            </div>
                            <span class="ms-2">Cargando...</span>
                        </div>
                    }

                    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="email" class="form-label">Correo electrónico</label>
                            <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                            <ValidationMessage For="@(() => loginModel.Email)" />
                        </div>

                        <div class="mb-3">
                            <label for="password" class="form-label">Contraseña</label>
                            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>

                        <button type="submit" class="btn btn-primary w-100">Ingresar</button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        var login = new LoginDTO() {
            Email = loginModel.Email,
            Password = loginModel.Password
        };

        isLoading = true;
        var result = await usuarioService.AuthenticateAsync(login);

        isLoading = false;

        if (result != null)
        {
            // Redirigir a la página principal
            navigation.NavigateTo("/productos");
        }
        else
        {
            // Mostrar mensaje de error o manejar el error de autenticación
            await alertaService.MostrarAlerta("Error", "Las credenciales no son válidas.");
        }
        
    }    

}