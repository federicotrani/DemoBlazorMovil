@page "/productos"
@using DemoBlazorMovil.Models
@using DemoBlazorMovil.Services
@using DemoBlazorMovil.Services.Contrato
@using DemoBlazorMovil.Services.Implementa

@inject IProductoService productoService
@inject NavigationManager navigationManager
@inject AlertaService alertaService


<h3>Lista de Productos</h3>
<div class="text-center">
    <button class="btn btn-primary" @onclick="CrearProducto">Crear Producto</button>
</div>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Precio</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @if (listaProductos != null && listaProductos.Count > 0)
        {
            @foreach (var producto in listaProductos)
            {
                        <tr>
                            <td width="45%">@producto.Nombre</td>
                            <td width="20%">$@producto.Precio</td>
                            <td width="35%">
                                <button class="btn btn-primary" @onclick="() => EditarProducto(producto)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil" viewBox="0 0 16 16">
                                        <path d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325" />
                                    </svg>
                                </button>
                                <button class="btn btn-danger" @onclick="() => BorrarProducto(producto)">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                        <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                        <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                                    </svg>
                                </button>
                            </td>
                        </tr>
            }
        }
        else
        {
                <tr>
                    <td colspan="3">No hay productos disponibles.</td>
                </tr>
        }
    </tbody>
</table>



@code{
    List<Producto> listaProductos = new List<Producto>();

    protected override async Task OnInitializedAsync()
    {
        listaProductos = await productoService.GetAllAsync();
    }

    private void EditarProducto(Producto producto)
    {        
        // Navegar a la página de edición del producto
        navigationManager.NavigateTo($"/producto/{producto.Id}");

    }
    private void BorrarProducto(Producto producto)
    {
        // Implementar la lógica para borrar el producto
        Console.WriteLine($"Borrar Producto: {producto.Nombre}");
    }

    private async Task CrearProducto()
    {
        await alertaService.MostrarAlerta("Crear Producto", "Se creará un nuevo producto.");
        // Navegar a la página de creación del producto
        navigationManager.NavigateTo("/producto/0");
    }
}